locals {
  aws_account_id                          = data.aws_caller_identity.current.account_id
  url_template_body_wa_security_pillar    = "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Operational-Best-Practices-for-AWS-Well-Architected-Security-Pillar.yaml"
  url_template_body_wa_reliability_pillar = "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Operational-Best-Practices-for-AWS-Well-Architected-Reliability-Pillar.yaml"
  url_template_body_wa_iam                = "https://raw.githubusercontent.com/awslabs/aws-config-rules/refs/heads/master/aws-config-conformance-packs/Operational-Best-Practices-for-AWS-Identity-and-Access-Management.yaml"
  wa_security_pillar_control_mappings = {
    "SEC01" = "account-part-of-organizations, mfa-enabled-for-iam-console-access, iam-user-mfa-enabled, iam-root-access-key-check, root-account-hardware-mfa-enabled, root-account-mfa-enabled, ec2-instance-managed-by-systems-manager, ec2-managedinstance-association-compliance-status-check, ec2-managedinstance-patch-compliance-status-check, codebuild-project-envvar-awscred-check"
    "SEC02" = "iam-password-policy, root-account-hardware-mfa-enabled, root-account-mfa-enabled, iam-user-mfa-enabled, mfa-enabled-for-iam-console-access, ecs-task-definition-user-for-host-mode-check, iam-group-has-users-check, iam-no-inline-policy-check, iam-policy-no-statements-with-admin-access, iam-policy-no-statements-with-full-access, iam-user-group-membership-check, iam-user-unused-credentials-check, secretsmanager-rotation-enabled-check, secretsmanager-scheduled-rotation-success-check, secretsmanager-secret-periodic-rotation, secretsmanager-secret-unused, secretsmanager-using-cmk, access-keys-rotated"
    "SEC03" = "ec2-imdsv2-check, ec2-instance-profile-attached, ecs-task-definition-user-for-host-mode-check, ecs-task-definition-nonroot-user, ecs-containers-nonprivileged, ecs-containers-readonly-access, efs-access-point-enforce-user-identity, emr-kerberos-enabled, iam-group-has-users-check, iam-no-inline-policy-check, iam-policy-no-statements-with-admin-access, iam-policy-no-statements-with-full-access, iam-customer-policy-blocked-kms-actions, iam-group-has-users-check, iam-policy-no-statements-with-admin-access, iam-root-access-key-check, iam-user-group-membership-check, iam-user-unused-credentials-check, account-part-of-organizations, dms-replication-not-public, ebs-snapshot-public-restorable-check, ec2-instance-no-public-ip, elasticsearch-in-vpc-only, opensearch-in-vpc-only, emr-master-no-public-ip, ec2-instances-in-vpc, lambda-function-public-access-prohibited, lambda-inside-vpc, rds-instance-public-access-check, rds-snapshots-public-prohibited, redshift-cluster-public-access-check, s3-account-level-public-access-blocks-periodic, s3-bucket-level-public-access-prohibited, s3-bucket-public-read-prohibited, s3-bucket-public-write-prohibited, sagemaker-notebook-no-direct-internet-access, secretsmanager-secret-unused, ssm-document-not-public, subnet-auto-assign-public-ip-disabled, autoscaling-launch-config-public-ip-disabled"
  }
  transformed_wa_security_pillar = [for i, j in local.wa_security_pillar_control_mappings : [for k in split(",", j) : replace(data.http.template_body_wa_security_pillar.response_body, trimspace(k), "${i}-${k}")]]
}
